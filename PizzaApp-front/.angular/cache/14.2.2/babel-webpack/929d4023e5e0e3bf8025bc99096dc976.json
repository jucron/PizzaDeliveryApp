{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jrenau01/IdeaProjects/PizzaDeliveryApp/PizzaApp-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ClientService } from \"../client.service\";\nimport { Observable } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../client.service\";\nimport * as i2 from \"../client.component\";\nimport * as i3 from \"@angular/common\";\nexport class OrderStatusComponent {\n  constructor(clientService) {\n    this.clientService = clientService;\n    this.order = ClientService.order;\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.order = ClientService.order;\n    this.updateOrder().then();\n  }\n\n  updateOrder() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('updateOrder accessed');\n      let sub = Observable.interval(5000).subscribe;\n      let timer = setTimeout(() => {\n        _this.clientService.getOrder();\n\n        _this.order = ClientService.order;\n\n        if (_this.order.status == 'finished') {\n          clearTimeout(timer);\n        }\n      }, 5000);\n    })();\n  }\n\n}\n\nOrderStatusComponent.ɵfac = function OrderStatusComponent_Factory(t) {\n  return new (t || OrderStatusComponent)(i0.ɵɵdirectiveInject(i1.ClientService));\n};\n\nOrderStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderStatusComponent,\n  selectors: [[\"app-order-status\"]],\n  decls: 39,\n  vars: 12,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-4\"], [\"start\", \"\"], [1, \"table\"], [\"scope\", \"col\"], [\"scope\", \"row\"]],\n  template: function OrderStatusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-client\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n      i0.ɵɵelement(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"p\", 3);\n      i0.ɵɵtext(6, \"Your Order is accepted! Please follow the Status below:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 4)(8, \"thead\")(9, \"tr\")(10, \"th\", 5);\n      i0.ɵɵtext(11, \"Order Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 5);\n      i0.ɵɵtext(13, \"Client Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 5);\n      i0.ɵɵtext(15, \"Delivery Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\", 5);\n      i0.ɵɵtext(17, \"Order Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\", 5);\n      i0.ɵɵtext(19, \"Paid online?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 5);\n      i0.ɵɵtext(21, \"Order Status\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"tbody\")(23, \"tr\")(24, \"th\", 6);\n      i0.ɵɵtext(25);\n      i0.ɵɵpipe(26, \"slice\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"td\");\n      i0.ɵɵtext(28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"td\");\n      i0.ɵɵtext(30);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"td\");\n      i0.ɵɵtext(32);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"td\");\n      i0.ɵɵtext(34);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"td\");\n      i0.ɵɵtext(36);\n      i0.ɵɵpipe(37, \"uppercase\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(38, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(25);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(26, 6, ctx.order.id, 0, 8));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.order.clientName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.order.address);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.order.orderTime);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.order.paid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(37, 10, ctx.order.status));\n    }\n  },\n  dependencies: [i2.ClientComponent, i3.UpperCasePipe, i3.SlicePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRlci1zdGF0dXMuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAAQA,aAAR,QAAmC,mBAAnC;AACA,SAAeC,UAAf,QAA0C,MAA1C;;;;;AAOA,OAAM,MAAOC,oBAAP,CAA2B;EAG/BC,YACUC,aADV,EACsC;IAA5B;IAHV,aAAQJ,aAAa,CAACK,KAAtB;EAG2C;;EAE3CC,QAAQ,IACP;;EAEDC,eAAe;IACb,KAAKF,KAAL,GAAaL,aAAa,CAACK,KAA3B;IACA,KAAKG,WAAL,GAAmBC,IAAnB;EACD;;EACKD,WAAW;IAAA;;IAAA;MACfE,OAAO,CAACC,GAAR,CAAY,sBAAZ;MACA,IAAIC,GAAG,GAAGX,UAAU,CAACY,QAAX,CAAoB,IAApB,EACPC,SADH;MAGA,IAAIC,KAAK,GAAGC,UAAU,CAAC,MAAK;QAC1B,KAAI,CAACZ,aAAL,CAAmBa,QAAnB;;QACA,KAAI,CAACZ,KAAL,GAAaL,aAAa,CAACK,KAA3B;;QACA,IAAI,KAAI,CAACA,KAAL,CAAWa,MAAX,IAAmB,UAAvB,EAAmC;UACjCC,YAAY,CAACJ,KAAD,CAAZ;QACD;MACF,CANqB,EAMnB,IANmB,CAAtB;IALe;EAYhB;;AAzB8B;;;mBAApBb,sBAAoBkB;AAAA;;;QAApBlB;EAAoBmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTjCL;MAGAA,+BAA6B,CAA7B,EAA6B,KAA7B,EAA6B,CAA7B;MAGIA;MAEAA,+BAAsB,CAAtB,EAAsB,GAAtB,EAAsB,CAAtB;MACWA;MAAuDA;MAChEA,iCAAqB,CAArB,EAAqB,OAArB,EAAqB,CAArB,EAAqB,IAArB,EAAqB,EAArB,EAAqB,IAArB,EAAqB,CAArB;MAGoBA;MAAQA;MACxBA;MAAgBA;MAAWA;MAC3BA;MAAgBA;MAAgBA;MAChCA;MAAgBA;MAAUA;MAC1BA;MAAgBA;MAAYA;MAC5BA;MAAgBA;MAAYA;MAG9BA,+BAAO,EAAP,EAAO,IAAP,EAAO,EAAP,EAAO,IAAP,EAAO,CAAP;MAEkBA;;MAAwBA;MACxCA;MAAIA;MAAoBA;MACxBA;MAAIA;MAAiBA;MACrBA;MAAIA;MAAmBA;MACvBA;MAAIA;MAAcA;MAClBA;MAAIA;;MAA4BA;MAKtCA;MAEFA;;;;MAZwBA;MAAAA;MACZA;MAAAA;MACAA;MAAAA;MACAA;MAAAA;MACAA;MAAAA;MACAA;MAAAA","names":["ClientService","Observable","OrderStatusComponent","constructor","clientService","order","ngOnInit","ngAfterViewInit","updateOrder","then","console","log","sub","interval","subscribe","timer","setTimeout","getOrder","status","clearTimeout","i0","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\jrenau01\\IdeaProjects\\PizzaDeliveryApp\\PizzaApp-front\\src\\app\\client\\order-status\\order-status.component.ts","C:\\Users\\jrenau01\\IdeaProjects\\PizzaDeliveryApp\\PizzaApp-front\\src\\app\\client\\order-status\\order-status.component.html"],"sourcesContent":["import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {ClientService, Order} from \"../client.service\";\nimport {delay, Observable, interval} from \"rxjs\";\n\n@Component({\n  selector: 'app-order-status',\n  templateUrl: './order-status.component.html',\n  styleUrls: ['./order-status.component.scss']\n})\nexport class OrderStatusComponent implements OnInit, AfterViewInit {\n  order = ClientService.order;\n\n  constructor(\n    private clientService: ClientService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.order = ClientService.order;\n    this.updateOrder().then();\n  }\n  async updateOrder() {\n    console.log('updateOrder accessed')\n    let sub = Observable.interval(5000)\n      .subscribe\n\n    let timer = setTimeout(() => {\n      this.clientService.getOrder();\n      this.order = ClientService.order;\n      if (this.order.status=='finished') {\n        clearTimeout(timer);\n      }\n    }, 5000)\n  }\n}\n","<app-client></app-client>\n\n\n<div class=\"container-fluid\">\n  <!-- row 4x4x4-->\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n    </div>\n    <div class=\"col-md-4\">\n      <p start>Your Order is accepted! Please follow the Status below:</p>\n      <table class=\"table\">\n        <thead>\n        <tr>\n          <th scope=\"col\">Order Id</th>\n          <th scope=\"col\">Client Name</th>\n          <th scope=\"col\">Delivery Address</th>\n          <th scope=\"col\">Order Time</th>\n          <th scope=\"col\">Paid online?</th>\n          <th scope=\"col\">Order Status</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <th scope=\"row\">{{order.id | slice:0:8}}</th>\n          <td>{{order.clientName}}</td>\n          <td>{{order.address}}</td>\n          <td>{{order.orderTime}}</td>\n          <td>{{order.paid}}</td>\n          <td>{{order.status | uppercase}}</td>\n        </tbody>\n      </table>\n\n    </div>\n    <div class=\"col-md-4\">\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}